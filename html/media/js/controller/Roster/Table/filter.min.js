/**
 * Filter function
 *
 * This function runs whenever one of the form elements changes
 * and a filtration needs to happen
 */function filter(e){var t=JSON.parse(window.localStorage.roster),n=[];console.log(e);t.members.filter(function(t){if(e.name!==undefined&&t.name.toLowerCase().search(e.name.toLowerCase())===-1){console.log(t.name+" will be hidden because its name does not match "+e.name);n.push(t.name)}if(e.race!=="all"&&e.race!==undefined&&t.race!=e.race){console.log(t.name+" will be hidden because its race does not match "+e.race);n.push(t.name)}if(e.class!=="all"&&e.class!==undefined&&t.class!=e.class){console.log(t.name+" will be hidden because its class does not match "+e.class);n.push(t.name)}if(e.minLevel!==undefined&&e.maxLevel!==undefined)if(t.level<parseInt(e.minLevel,10)||t.level>parseInt(e.maxLevel,10)){console.log(t.name+" will be hidden because it's not in the level range of "+e.minLevel+" - "+e.maxLevel);n.push(t.name)}if(e.rank!==undefined&&e.rank!=="all"&&t.rank!==e.rank){console.log(t.name+" will be hidden because its guild rank does not match "+e.rank);n.push(t.name)}});$.each(t.members,function(e,t){if($.inArray(t.name,n)!==-1&&!$("tr.character."+t.name).hasClass("hidden")){console.log("Hiding "+t.name);$("tr.character."+t.name).addClass("hidden").fadeOut("medium")}if($.inArray(t.name,n)==-1&&$("tr.character."+t.name).hasClass("hidden")){console.log("Showing "+t.name);$("tr.character."+t.name).removeClass("hidden").fadeIn("medium")}});$("td.race a, td.class a").each(function(){var e=$(this).attr("href").match(/\/[\w\-]+\=[\w\-]+$/);$(this).attr("href",path+e)});$(".guild-roster").trigger("update")};